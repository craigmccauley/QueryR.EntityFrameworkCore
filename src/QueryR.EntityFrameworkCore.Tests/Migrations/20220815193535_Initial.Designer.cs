// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueryR.EntityFrameworkCore.Tests.TestHelpers;

#nullable disable

namespace QueryR.EntityFrameworkCore.Tests.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20220815193535_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("QueryR.EntityFrameworkCore.Tests.TestHelpers.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 0,
                            Name = "Craig"
                        },
                        new
                        {
                            Id = 2,
                            Age = 0,
                            Name = "Also Craig"
                        });
                });

            modelBuilder.Entity("QueryR.EntityFrameworkCore.Tests.TestHelpers.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Titan",
                            OwnerId = 1,
                            PetTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rufus",
                            OwnerId = 2,
                            PetTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Meowswers",
                            OwnerId = 1,
                            PetTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kitty",
                            OwnerId = 2,
                            PetTypeId = 2
                        });
                });

            modelBuilder.Entity("QueryR.EntityFrameworkCore.Tests.TestHelpers.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dog"
                        });
                });

            modelBuilder.Entity("QueryR.EntityFrameworkCore.Tests.TestHelpers.Pet", b =>
                {
                    b.HasOne("QueryR.EntityFrameworkCore.Tests.TestHelpers.Person", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueryR.EntityFrameworkCore.Tests.TestHelpers.PetType", "PetType")
                        .WithMany()
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("QueryR.EntityFrameworkCore.Tests.TestHelpers.Person", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
